{
	"info": {
		"_postman_id": "f90a420d-88e7-4bdb-ada9-faf251f8f25a",
		"name": "LMS Positive",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Login",
			"item": [
				{
					"name": "UserLoginController_DataDriven",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bfe71b37-d837-485e-bdd9-fc18d10669d3",
								"exec": [
									"const response = pm.response.json();\r",
									"const Token = response.token;\r",
									"pm.globals.set(\"APIToken\", Token);\r",
									"\r",
									"var statusCode = pm.iterationData.get(\"statuscode1\");\r",
									"pm.test('Expected response status',function(){\r",
									"    pm.response.to.have.status(statusCode)\r",
									"});\r",
									"\r",
									"//header verification\r",
									"pm.test(\"Header validation\",()=> {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "7e006f85-014e-44f7-8087-8b0a0d0e0157",
								"exec": [
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "a039fdf3-7626-4df7-99fd-1e19953b6792",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"password\": \"{{password}}\",\r\n    \"userLoginEmailId\": \"{{userLoginEmailId}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseurl1}}{{endpoint1}}"
					},
					"response": [
						{
							"id": "bf52f208-4fc2-4731-906b-2684c509a97a",
							"name": "UserLoginController",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{{dynamicBody}}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseurl}}/login"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Cowboy"
								},
								{
									"key": "Report-To",
									"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1709829078&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=tSmHK7g7q3frCl%2F6tMIY88KeOHaQ46J3Slh%2Fwd41o%2BM%3D\"}]}"
								},
								{
									"key": "Reporting-Endpoints",
									"value": "heroku-nel=https://nel.heroku.com/reports?ts=1709829078&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=tSmHK7g7q3frCl%2F6tMIY88KeOHaQ46J3Slh%2Fwd41o%2BM%3D"
								},
								{
									"key": "Nel",
									"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-Xss-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000 ; includeSubDomains"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 07 Mar 2024 16:31:18 GMT"
								},
								{
									"key": "Via",
									"value": "1.1 vegur"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"token\": \"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJzZGV0b3JnYW5pemVyc0BnbWFpbC5jb20iLCJpYXQiOjE3MDk4MjkwNzgsImV4cCI6MTcwOTg1Nzg3OH0.Jyp_anoEK0-n2DzjxDEr6S2I7QUpE9UNKW3_9NI15Eg0OH7cwYRn4JIqo-ggT8dqZnu8hR7Sg_TIMirVVTLHqw\",\n    \"type\": \"Bearer\",\n    \"userId\": \"U49\",\n    \"email\": \"sdetorganizers@gmail.com\",\n    \"roles\": [\n        \"ROLE_ADMIN\"\n    ],\n    \"status\": \"Active\"\n}"
						}
					]
				}
			],
			"id": "9b36961f-0cbf-4bdd-bfb8-efca30c528c6"
		},
		{
			"name": "ProgramModule",
			"item": [
				{
					"name": "AddNewProgram",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "90549c02-077d-485e-a788-314616661485",
								"exec": [
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "219b27a4-d62d-4413-82c1-33d7dd9308a9",
								"exec": [
									"const response = pm.response.json();\r",
									"const programId = response.programId;\r",
									"const index = pm.info.iteration;\r",
									"pm.globals.set(`programId_${index}`,programId);\r",
									"//pm.collectionVariables.set(\"programId\",response.programId)\r",
									"//pm.collectionVariables.set(\"programName\",response.programName)\r",
									"\r",
									"var statusCode = pm.iterationData.get(\"statuscode2\");\r",
									"pm.test('Expected response status',function(){\r",
									"    pm.response.to.have.status(statusCode)\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "f4d3240d-29ed-4e0a-9370-a14e433c6690",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"programDescription\": \"{{programDescription}}\",\r\n    \"programName\": \"{{programName}}\",\r\n    \"programStatus\": \"{{programStatus}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseurl2}}{{endpoint2}}"
					},
					"response": []
				},
				{
					"name": "UpdateProgramByProgramID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "e006d4b3-0d35-4846-be07-b91cd30217a1",
								"exec": [
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "03ba23af-7a3d-4181-b860-8fab750f5c5b",
								"exec": [
									"var statusCode = pm.iterationData.get(\"statuscode3\");",
									"pm.test('Expected response status',function(){",
									"    pm.response.to.have.status(statusCode)",
									"});",
									"",
									"const response = pm.response.json();",
									"const programname = response.programName;",
									"const index = pm.info.iteration;",
									"pm.globals.set(`programName_${index}`,programname);"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "714f51fa-2740-4cd4-8f77-78e8f4a93fad",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "\r\n{\r\n    \"programDescription\": \"{{programDescput}}\",\r\n    \"programName\": \"{{programNameput}}\",\r\n    \"programStatus\": \"{{programStatusput}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseurl3}}{{endurl3}}"
					},
					"response": [
						{
							"id": "a494b02b-f8ee-4dbb-90bf-088f899faabe",
							"name": "InvalidIdScenario",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{{response_payload}}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseurl}}/program/:programId",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"program",
										":programId"
									],
									"variable": [
										{
											"key": "programId",
											"value": "{{programId}}"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Cowboy"
								},
								{
									"key": "Report-To",
									"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1709756395&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=JOgrtZmbzr31U0jO0YITUD2au71fnbuzC8FF996%2BYvU%3D\"}]}"
								},
								{
									"key": "Reporting-Endpoints",
									"value": "heroku-nel=https://nel.heroku.com/reports?ts=1709756395&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=JOgrtZmbzr31U0jO0YITUD2au71fnbuzC8FF996%2BYvU%3D"
								},
								{
									"key": "Nel",
									"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-Xss-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000 ; includeSubDomains"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 06 Mar 2024 20:19:55 GMT"
								},
								{
									"key": "Via",
									"value": "1.1 vegur"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"message\": \"no list with such program name 16286\",\n    \"success\": false\n}"
						}
					]
				},
				{
					"name": "UpdateProgramByProgramName",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "588cb9ac-5768-449e-b19f-375901c77147",
								"exec": [
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "e7f982a8-b52a-4714-bca6-6a37b85d5d41",
								"exec": [
									"var statusCode = pm.iterationData.get(\"statuscode11\");\r",
									"pm.test('Expected response status',function(){\r",
									"    pm.response.to.have.status(statusCode)\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "033f6c8a-93d1-4528-9f64-de6df7b21a10",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"programDescription\": \"{{programDescputname}}\",\r\n    \"programName\": \"{{programNameputname}}\",\r\n    \"programStatus\": \"{{programStatusputname}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseurl11}}{{endurl11}}"
					},
					"response": []
				},
				{
					"name": "ByProgramId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"id": "5db148fa-a1f9-4a5c-b0e0-194d4e14a679"
							}
						}
					],
					"id": "8f504f2a-a5cc-4cbe-a8e6-4596f68aaedb",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{baseurl}}/programs/{{programId_0}}"
					},
					"response": []
				},
				{
					"name": "AllPrograms",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"id": "9fe1a1a2-7369-4863-a5ee-4a4f241f9a4c"
							}
						}
					],
					"id": "214d62c4-24cb-4517-a795-0ad6501b2926",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{baseurl}}/allPrograms"
					},
					"response": []
				},
				{
					"name": "AllProgramsWithUsers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"id": "367ef89a-dcf3-4acc-a9a6-466fb231b8a7"
							}
						}
					],
					"id": "5fa43ab9-e982-45f9-b3eb-fa7ae270cbf4",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{baseurl}}/allProgramsWithUsers"
					},
					"response": []
				}
			],
			"id": "99d40f56-9500-4b28-8fcb-21b9df4f035d"
		},
		{
			"name": "Program batch controller",
			"item": [
				{
					"name": "Create new batch",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "eb9cd21e-14a0-41da-af43-5c66e6f40a8f",
								"exec": [
									"var statusCode = pm.iterationData.get(\"statuscode12\");",
									"pm.test('Expected response status',function(){",
									"    pm.response.to.have.status(statusCode)",
									"});",
									"",
									"const response = pm.response.json();",
									"const batchid = response.batchId;",
									"const index = pm.info.iteration;",
									"pm.globals.set(`batchId_${index}`,batchid);"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "beec0d59-069e-4af7-8132-38acdcaf5470",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{ \n  \"batchDescription\": \"{{batchdescription}}\", \n  \"batchName\": \"{{batchname}}\", \n  \"batchNoOfClasses\": \"{{no_of_classes}}\", \n  \"batchStatus\": \"{{batchstatus}}\", \n  \"programId\": \"{{programIdBatch}}\" \n } ",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseurl12}}{{endpoint12}}"
					},
					"response": []
				},
				{
					"name": "Get all batches",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"id": "d59f4a15-2b04-410a-9186-4948f4e56213"
							}
						}
					],
					"id": "809a0873-a2fe-4194-8756-7e400c09b23d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{baseurl}}/batches"
					},
					"response": []
				},
				{
					"name": "Update batch details",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b528d000-59be-4154-93ea-4331f0f4d794",
								"exec": [
									"var statusCode = pm.iterationData.get(\"statuscode4\");",
									"pm.test('Expected response status',function(){",
									"    pm.response.to.have.status(statusCode)",
									"});",
									"//to create multiple user ids and names",
									"const response = pm.response.json();",
									"const batchname = response.batchName;",
									"const index = pm.info.iteration;",
									"pm.globals.set(`batchName_${index}`,batchname);"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "998f8572-3ae4-430a-99f4-29441d086241",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{ \n  \"batchDescription\": \"{{put_batchdescription}}\",\n  \"batchName\": \"{{put_batchname}}\", \n  \"batchNoOfClasses\": \"{{put_no_of_classes}}\", \n  \"batchStatus\": \"{{put_batchstatus}}\", \n  \"programId\": \"{{programIdBatchput}}\",\n  \"programName\": \"{{put_programname}}\"\n} ",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseurl4}}{{endpoint4}}"
					},
					"response": []
				},
				{
					"name": "Get batch details by Batch Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"id": "cd3dccfe-0d94-4913-82e1-01b21befa9a7"
							}
						}
					],
					"id": "acbfa0ac-9e51-49c4-94c8-0e5a60a023a0",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{baseurl}}/batches/batchId/{{batchId_0}}"
					},
					"response": []
				},
				{
					"name": "Get batch details by Batch Name",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"id": "6fee835d-7fc8-4a66-a21e-e5778e7636f7"
							}
						}
					],
					"id": "2c88458d-25da-4819-8b69-a8b7af99b6d3",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{baseurl}}/batches/batchName/{{batchName_0}}"
					},
					"response": []
				},
				{
					"name": "Get batch details by Program Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"id": "b4e6b7ff-c364-49dc-a290-3e724dec2681"
							}
						}
					],
					"id": "bbd74261-9e9f-4776-b0f2-5fcd508894f5",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{baseurl}}/batches/program/{{programId_0}}"
					},
					"response": []
				}
			],
			"id": "1e46163d-9001-42e1-ad2a-7a3553479c5a"
		},
		{
			"name": "UserRoleProgram",
			"item": [
				{
					"name": "Assigned Program/Batch(es) of All UsersDataDriven",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"id": "23bb65b4-b1ec-4f44-9443-9717ddc9bea7"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"id": "2c9dfafb-27f7-43d1-8cda-282d97b478c2"
							}
						}
					],
					"id": "7d0d9b83-5280-4031-9573-7ef975dec6e5",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{baseurl}}/userRoleProgramBatchMap"
					},
					"response": [
						{
							"id": "5b9a9368-77c3-4b16-982e-700392bd5cf2",
							"name": "Assigned Program/Batch(es) of All Users",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": "{{baseurl}}/userRoleProgramBatchMap"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Cowboy"
								},
								{
									"key": "Report-To",
									"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1709829150&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=bTRIH4jOlNZZwHnwb4Cd8viDEZN0TQPXat%2BU1EhKeXQ%3D\"}]}"
								},
								{
									"key": "Reporting-Endpoints",
									"value": "heroku-nel=https://nel.heroku.com/reports?ts=1709829150&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=bTRIH4jOlNZZwHnwb4Cd8viDEZN0TQPXat%2BU1EhKeXQ%3D"
								},
								{
									"key": "Nel",
									"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-Xss-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000 ; includeSubDomains"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 07 Mar 2024 16:32:30 GMT"
								},
								{
									"key": "Via",
									"value": "1.1 vegur"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "[\n    {\n        \"userId\": \"U19\",\n        \"roleId\": \"R03\",\n        \"programId\": 16208,\n        \"batchId\": 8432,\n        \"userRoleProgramBatchStatus\": \"Active\"\n    },\n    {\n        \"userId\": \"U38\",\n        \"roleId\": \"R03\",\n        \"programId\": 16208,\n        \"batchId\": 8432,\n        \"userRoleProgramBatchStatus\": \"Active\"\n    },\n    {\n        \"userId\": \"U25\",\n        \"roleId\": \"R02\",\n        \"programId\": 16208,\n        \"batchId\": 8444,\n        \"userRoleProgramBatchStatus\": \"Active\"\n    },\n    {\n        \"userId\": \"U44\",\n        \"roleId\": \"R03\",\n        \"programId\": 16210,\n        \"batchId\": 8433,\n        \"userRoleProgramBatchStatus\": \"Active\"\n    },\n    {\n        \"userId\": \"U45\",\n        \"roleId\": \"R03\",\n        \"programId\": 16210,\n        \"batchId\": 8433,\n        \"userRoleProgramBatchStatus\": \"Active\"\n    },\n    {\n        \"userId\": \"U43\",\n        \"roleId\": \"R01\",\n        \"programId\": 16213,\n        \"batchId\": 8448,\n        \"userRoleProgramBatchStatus\": \"Active\"\n    },\n    {\n        \"userId\": \"U01\",\n        \"roleId\": \"R01\",\n        \"programId\": 16208,\n        \"batchId\": 8432,\n        \"userRoleProgramBatchStatus\": \"Active\"\n    },\n    {\n        \"userId\": \"U01\",\n        \"roleId\": \"R01\",\n        \"programId\": 16213,\n        \"batchId\": 8448,\n        \"userRoleProgramBatchStatus\": \"Active\"\n    },\n    {\n        \"userId\": \"U50\",\n        \"roleId\": \"R02\",\n        \"programId\": 16228,\n        \"batchId\": 8453,\n        \"userRoleProgramBatchStatus\": \"Active\"\n    },\n    {\n        \"userId\": \"U03\",\n        \"roleId\": \"R02\",\n        \"programId\": 16208,\n        \"batchId\": 8451,\n        \"userRoleProgramBatchStatus\": \"Active\"\n    },\n    {\n        \"userId\": \"U29\",\n        \"roleId\": \"R03\",\n        \"programId\": 16208,\n        \"batchId\": 8451,\n        \"userRoleProgramBatchStatus\": \"Active\"\n    },\n    {\n        \"userId\": \"U03\",\n        \"roleId\": \"R02\",\n        \"programId\": 16213,\n        \"batchId\": 8475,\n        \"userRoleProgramBatchStatus\": \"Active\"\n    },\n    {\n        \"userId\": \"U250\",\n        \"roleId\": \"R03\",\n        \"programId\": 16328,\n        \"batchId\": 8503,\n        \"userRoleProgramBatchStatus\": \"Active\"\n    },\n    {\n        \"userId\": \"U462\",\n        \"roleId\": \"R03\",\n        \"programId\": 16384,\n        \"batchId\": 8574,\n        \"userRoleProgramBatchStatus\": \"Active\"\n    },\n    {\n        \"userId\": \"U111\",\n        \"roleId\": \"R02\",\n        \"programId\": 16228,\n        \"batchId\": 8453,\n        \"userRoleProgramBatchStatus\": \"active\"\n    },\n    {\n        \"userId\": \"U564\",\n        \"roleId\": \"R03\",\n        \"programId\": 16213,\n        \"batchId\": 8592,\n        \"userRoleProgramBatchStatus\": \"Active\"\n    },\n    {\n        \"userId\": \"U576\",\n        \"roleId\": \"R03\",\n        \"programId\": 16226,\n        \"batchId\": 8463,\n        \"userRoleProgramBatchStatus\": \"active\"\n    },\n    {\n        \"userId\": \"U502\",\n        \"roleId\": \"R02\",\n        \"programId\": 16228,\n        \"batchId\": 8471,\n        \"userRoleProgramBatchStatus\": \"Active\"\n    }\n]"
						}
					]
				}
			],
			"id": "cea2f2cc-0b99-409c-8dd9-e6bd280cd6b1"
		},
		{
			"name": "User Controller",
			"item": [
				{
					"name": "Create new user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3eb28d96-f40e-41e6-a4bc-a1886313f801",
								"exec": [
									"var statusCode = pm.iterationData.get(\"statuscode5\");\r",
									"pm.test('Expected response status',function(){\r",
									"    pm.response.to.have.status(statusCode)\r",
									"});\r",
									"\r",
									"const response = pm.response.json();\r",
									"const userId = response.userId;\r",
									"const index = pm.info.iteration;\r",
									"pm.globals.set(`userId_${index}`,userId);\r",
									"\r",
									"\r",
									"if (pm.response.code !== 201) {\r",
									"     postman.setNextRequest(\"next\")\r",
									"}\r",
									"\r",
									"var responseschema = {\r",
									"    \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"userId\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"userFirstName\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"userLastName\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"userMiddleName\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"userPhoneNumber\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"userLocation\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"userTimeZone\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"userLinkedinUrl\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"userEduUg\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"userEduPg\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"userComments\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"userVisaStatus\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"userLoginEmail\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"userId\",\r",
									"    \"userFirstName\",\r",
									"    \"userLastName\",\r",
									"    \"userMiddleName\",\r",
									"    \"userPhoneNumber\",\r",
									"    \"userLocation\",\r",
									"    \"userTimeZone\",\r",
									"    \"userLinkedinUrl\",\r",
									"    \"userEduUg\",\r",
									"    \"userEduPg\",\r",
									"    \"userComments\",\r",
									"    \"userVisaStatus\",\r",
									"    \"userLoginEmail\"\r",
									"  ]\r",
									"}\r",
									"  \r",
									"pm.test(\"Validate schema\", () => {\r",
									"pm.response.to.have.jsonSchema(responseschema);\r",
									"});\r",
									"\r",
									"if(pm.response.code==400 || pm.response.code==404){\r",
									"pm.test(\"Validate Response Body\", function () {\r",
									"   var  responseBody = pm.response.json();\r",
									" \r",
									"    pm.expect(responseBody.status).to.eql(pm.iterationData.get(\"status\"));\r",
									"    pm.expect(responseBody.message).to.eql(pm.iterationData.get(\"message\"));\r",
									"});\r",
									"}\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "7904f926-d521-4671-86c0-57efecded951",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"userComments\": \"{{user_Comments}}\",\r\n  \"userEduPg\": \"{{user_EduPg}}\",\r\n  \"userEduUg\": \"{{user_EduUg}}\",\r\n  \"userFirstName\": \"{{user_FirstName}}\",\r\n  //\"userId\": \"<string>\",\r\n  \"userLastName\": \"{{user_LastName}}\",\r\n  \"userLinkedinUrl\": \"{{user_LinkedinUrl}}\",\r\n  \"userLocation\": \"{{user_Location}}\",\r\n  \"userLogin\": {\r\n    \"loginStatus\": \"{{loginStatus}}\",\r\n    \"password\": \"{{password}}\",\r\n    \"roleIds\": [\r\n      \"{{roleIds}}\"\r\n    ],\r\n    \"status\": \"{{status}}\",\r\n    \"userLoginEmail\": \"{{user_LoginEmail}}\"\r\n  },\r\n  \"userMiddleName\": \"{{user_MiddleName}}\",\r\n  \"userPhoneNumber\": {{user_PhoneNumber}},\r\n  \"userRoleMaps\": [\r\n    {\r\n      \"roleId\": \"{{roleId}}\",\r\n      \"userRoleStatus\": \"{{user_RoleStatus}}\"\r\n    }\r\n\r\n  ],\r\n  \"userTimeZone\": \"{{user_TimeZone}}\",\r\n  \"userVisaStatus\": \"{{user_VisaStatus}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseurl5}}{{endpoint5}}"
					},
					"response": []
				},
				{
					"name": "Get all roles",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"id": "33da825c-e46c-43cc-b40f-44561baf5ad9"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"id": "168303b4-d6e4-4988-96eb-6bd7441cb0a4"
							}
						}
					],
					"id": "2696802a-ae1f-4a30-a8a3-b45a7f2ebf5f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{baseurl}}/roles"
					},
					"response": []
				},
				{
					"name": "Get all users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Header content type\", () => {",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");",
									"});",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"id": "eeb1d4c5-e044-4612-991b-c705f2edaa12"
							}
						}
					],
					"id": "098c9f02-fdf7-45fc-b51f-426e403ae89d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{baseurl}}/users"
					},
					"response": []
				},
				{
					"name": "All User with Roles",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"id": "8a7a444d-05fb-4351-b137-699d76d8c46c"
							}
						}
					],
					"id": "49637dc2-4ff2-4d3d-90df-1a63d030dfde",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{baseurl}}/roles"
					},
					"response": []
				},
				{
					"name": "Get all active users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Header content type\", () => {",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");",
									"});",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"id": "e2d3dd5d-fce1-4e73-bf9c-7b877673177e"
							}
						}
					],
					"id": "788828a3-925d-46c3-a86f-7fce853e298d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{baseurl}}/users/activeUsers"
					},
					"response": []
				},
				{
					"name": "Count of active and inactive users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Header content type\", () => {",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");",
									"});",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"id": "b279beaf-ea53-47f6-821b-390f169c4236"
							}
						}
					],
					"id": "eeabc9d1-f391-45c7-8895-fab7516827a4",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{baseurl}}/users/byStatus"
					},
					"response": []
				},
				{
					"name": "Update user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b923e760-dda2-490e-8f2a-79b1bf3fcfa7",
								"exec": [
									"pm.test(\"Header content type\", () => {",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");",
									"});",
									"var statusCode = pm.iterationData.get(\"statuscode6\");",
									"pm.test('Expected response status',function(){",
									"    pm.response.to.have.status(statusCode)",
									"});",
									"",
									"if(pm.response.code === 200)",
									"{",
									"// pm.test(\"Userid validation\", () => {",
									"//     const response = pm.response.json();",
									"//     pm.expect(response.userId).to.eql(pm.collectionVariables.get('userId_0'));",
									"// });",
									"",
									"pm.test(\"Schema validation\", () => {",
									"    const schema = {",
									"        \"type\": \"object\",",
									"        \"properties\": {",
									"            \"userId\": {",
									"                \"type\": \"string\"",
									"            },",
									"            \"userFirstName\": {",
									"                \"type\": \"string\"",
									"            },",
									"            \"userLastName\": {",
									"                \"type\": \"string\"",
									"            },",
									"            \"userMiddleName\": {",
									"                \"type\": \"string\"",
									"            },",
									"            \"userPhoneNumber\": {",
									"                \"type\": \"integer\"",
									"            },",
									"            \"userLocation\": {",
									"                \"type\": \"string\"",
									"            },",
									"            \"userTimeZone\": {",
									"                \"type\": \"string\"",
									"            },",
									"            \"userLinkedinUrl\": {",
									"                \"type\": \"string\"",
									"            },",
									"            \"userEduUg\": {",
									"                \"type\": \"string\"",
									"            },",
									"            \"userEduPg\": {",
									"                \"type\": \"string\"",
									"            },",
									"            \"userComments\": {",
									"                \"type\": \"string\"",
									"            },",
									"            \"userVisaStatus\": {",
									"                \"type\": \"string\"",
									"            },",
									"            \"userLoginEmail\": {",
									"                \"type\": \"string\"",
									"            }",
									"    },",
									"    \"required\": [\"userId\", \"userFirstName\", \"userLastName\", \"userMiddleName\",",
									"    \"userPhoneNumber\", \"userLocation\", \"userTimeZone\", \"userLinkedinUrl\", \"userEduUg\",",
									"    \"userEduPg\", \"userComments\", \"userVisaStatus\", \"userLoginEmail\"]",
									"    }",
									"    pm.response.to.have.jsonSchema(schema);",
									"});",
									"}",
									"else if(pm.response.code === 400)",
									"{",
									"    pm.test(\"Status code is 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"}",
									"else if(pm.response.code === 500)",
									"{",
									"    pm.test(\"Status code is 500\", function () {",
									"        pm.response.to.have.status(500);",
									"    });",
									"}",
									"else if(pm.response.code === 401)",
									"{",
									"    pm.test(\"Status code is 401\", function () {",
									"        pm.response.to.have.status(401);",
									"    });",
									"}",
									"else",
									"{",
									"    response = pm.response.json();",
									"    console.log(\"Error message \" + response.error);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "ef6cd10e-4d65-4d41-9228-a076f12b75ed",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userComments\": \"{{usercomments}}\",\n    \"userEduPg\": \"{{usereducationpg}}\",\n    \"userEduUg\": \"{{usereducationug}}\",\n    \"userFirstName\": \"{{firstname}}\",\n    //\"userId\": \"{{userid}}\",\n    \"userLastName\": \"{{lastname}}\",\n    \"userLinkedinUrl\": \"{{linkedinurl}}\",\n    \"userLocation\": \"{{userlocation}}\",\n    \"userLoginEmail\": \"{{useremail}}\",\n    \"userMiddleName\": \"{{usermiddlename}}\",\n    \"userPhoneNumber\": \"{{phonenumber}}\",\n    \"userTimeZone\": \"{{timezone}}\",\n    \"userVisaStatus\": \"{{visastatus}}\"\n}"
						},
						"url": "{{baseurl6}}{{endpoint6}}"
					},
					"response": []
				},
				{
					"name": "Update User Role Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"\r",
									"var statusCode = pm.iterationData.get(\"statuscode7\");\r",
									"pm.test('Expected response status',function(){\r",
									"    pm.response.to.have.status(statusCode)\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"id": "7bd9208e-c08a-4cce-b38b-92547413e30a"
							}
						}
					],
					"id": "7a3dc5cc-4791-4336-b39e-67af4e3399fb",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"roleId\": \"{{roleidputuserrolestatus}}\",\r\n\"userRoleStatus\": \"{{userrolestatusputrolestatus}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseurl7}}{{endpoint7}}"
					},
					"response": []
				},
				{
					"name": "Update User RoleID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"var statusCode = pm.iterationData.get(\"statuscode8\");\r",
									"pm.test('Expected response status',function(){\r",
									"    pm.response.to.have.status(statusCode)\r",
									"});\r",
									"\r",
									"// if (pm.response.code !== 201) {\r",
									"//      postman.setNextRequest(\"Update User RoleID\");\r",
									"// }\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"id": "6e11bace-33fb-4b0b-9b59-ed9934c827d7"
							}
						}
					],
					"id": "15598a80-b5d4-4c66-8cf4-b9e01ad39d87",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"userRoleList\": [\r\n    \"{{userrolelistput1}}\"\r\n  ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseurl8}}{{endpoint8}}"
					},
					"response": []
				},
				{
					"name": "Assign Update User Role Program Batch Status from variables",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "150ba91b-c4b6-47ac-aee2-d087fe73a92a",
								"exec": [
									"var statusCode = pm.iterationData.get(\"statuscode9\");\r",
									"pm.test('Expected response status',function(){\r",
									"    pm.response.to.have.status(statusCode)\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "62753af6-0212-43e8-ac9b-0a28b7878a8b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"programId\": {{programIdputroleprog}},\r\n  \"roleId\": \"{{roleidputprogbatch}}\",\r\n  \"userId\": \"{{userIdputrolepgm}}\",\r\n  \"userRoleProgramBatches\": [\r\n    {\r\n      \"batchId\": {{batchIdputrolepgm}},\r\n      \"userRoleProgramBatchStatus\": \"{{userprogbatchstatusupdate}}\"\r\n    }\r\n  ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseurl9}}{{endpoint9}}"
					},
					"response": []
				},
				{
					"name": "Update User Login Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var statusCode = pm.iterationData.get(\"statuscode10\");\r",
									"pm.test('Expected response status',function(){\r",
									"    pm.response.to.have.status(statusCode)\r",
									"});"
								],
								"type": "text/javascript",
								"id": "0ac5e0a4-fc64-4a99-a873-a4c49c3d45b7"
							}
						}
					],
					"id": "8c315798-91d1-434a-bb8f-9e65a382cc8d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"loginStatus\": \"{{loginstatusput}}\",\r\n  \"password\": \"{{passwordput}}\",\r\n  \"roleIds\": [\r\n    \"{{roleidpulogin}}\"\r\n  ],\r\n  \"status\": \"{{statusputlogin}}\",\r\n  \"userLoginEmail\": \"{{userloginemailputlogin}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseurl10}}{{endpoint10}}"
					},
					"response": []
				},
				{
					"name": "Assigned Program/Batch of a User By User Id DataDriven",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "02970eed-56b8-49e5-bd5f-124bc7f83ecc",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "cad101e3-40e8-40b3-9d45-9632a372a341",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "dbb14c57-df12-4a2a-b9a8-6bea245153fb",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{baseurl}}{{endpoint13}}"
					},
					"response": [
						{
							"id": "7110f594-00e7-4372-b46a-c5ea4d057b44",
							"name": "Assigned Program/Batch of a User By User Id",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseurl}}/userRoleProgramBatchMap/:userId",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"userRoleProgramBatchMap",
										":userId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "{{userId}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Cowboy"
								},
								{
									"key": "Report-To",
									"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1709829165&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=kNKTmBNrl0wLH3H4I7GsAddRg3beD9%2F2tboHRFl0WLo%3D\"}]}"
								},
								{
									"key": "Reporting-Endpoints",
									"value": "heroku-nel=https://nel.heroku.com/reports?ts=1709829165&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=kNKTmBNrl0wLH3H4I7GsAddRg3beD9%2F2tboHRFl0WLo%3D"
								},
								{
									"key": "Nel",
									"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-Xss-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000 ; includeSubDomains"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 07 Mar 2024 16:32:45 GMT"
								},
								{
									"key": "Via",
									"value": "1.1 vegur"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "[\n    {\n        \"userId\": \"U19\",\n        \"roleId\": \"R03\",\n        \"programId\": 16208,\n        \"batchId\": 8432,\n        \"userRoleProgramBatchStatus\": \"Active\"\n    }\n]"
						}
					]
				},
				{
					"name": "Get user information by id",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"id": "e6d0df02-8742-4171-b261-c1ae2e7fd57c"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Header content type\", () =>{",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");",
									"});",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"id": "6c4d8543-22d6-40f8-9cd0-8882fd3cdb4d"
							}
						}
					],
					"id": "7a68d831-9f7e-4730-a9ac-511158e69f20",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{baseurl}}/users/{{userId_0}}"
					},
					"response": []
				},
				{
					"name": "Get user by Program Batches",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c486eaff-e0c5-41fa-9578-c09944bd3f1a",
								"exec": [
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "5527a4da-1075-4899-8ade-4905402b74a5",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{baseurl}}{{endpoint14}}"
					},
					"response": []
				},
				{
					"name": "Get user by program",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "138a7a28-5672-497b-bb7d-adb226cf9a7c",
								"exec": [
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "4335e0de-ee8e-431c-b08e-4e8412fef4d6",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{baseurl}}{{endpoint15}}"
					},
					"response": []
				},
				{
					"name": "Users by roleId V2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Header validation\",()=> {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
									"});\r",
									" \r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"id": "f5f1b7c4-59c1-4722-8f5b-3d25b9f72007"
							}
						}
					],
					"id": "c663d529-5893-4473-9c8a-4943ea582ea7",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{baseurl}}/v2/users"
					},
					"response": []
				},
				{
					"name": "Get user by roleid",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"id": "885beb68-7b06-4b00-b1f6-514d7cfce147"
							}
						}
					],
					"id": "9ce0faad-de08-4de9-8621-c522e3b0a461",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseurl}}/users/roles/:roleId",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"users",
								"roles",
								":roleId"
							],
							"variable": [
								{
									"id": "d6fa9045-e87e-48d1-9a01-ad7801f6b013",
									"key": "roleId",
									"value": "R01"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "All Programs/Batches assigned to the User By UserId DataDriven",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4346768a-fbba-4619-9bea-8756c8b278a4",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"//postman.setNextRequest(\"Get user information by id\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "36287aaf-72c2-4b33-b57d-afa34f7e6513",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseurl}}{{endpoint16}}",
							"host": [
								"{{baseurl}}{{endpoint16}}"
							],
							"query": [
								{
									"key": "",
									"value": null,
									"disabled": true
								}
							]
						}
					},
					"response": [
						{
							"id": "0df72286-a5e9-4783-b5e5-9bf7e74460a1",
							"name": "All Programs/Batches assigned to the User By UserId",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseurl}}/userRoleProgramBatchMap/deleteAll/:userId",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"userRoleProgramBatchMap",
										"deleteAll",
										":userId"
									],
									"query": [
										{
											"key": "",
											"value": null,
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "userId",
											"value": "{{userId}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Cowboy"
								},
								{
									"key": "Report-To",
									"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1709829195&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=XaHflJboba1inDR%2BtHORPcz%2BrQOLxOAYi2RyYBH906w%3D\"}]}"
								},
								{
									"key": "Reporting-Endpoints",
									"value": "heroku-nel=https://nel.heroku.com/reports?ts=1709829195&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=XaHflJboba1inDR%2BtHORPcz%2BrQOLxOAYi2RyYBH906w%3D"
								},
								{
									"key": "Nel",
									"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-Xss-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000 ; includeSubDomains"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 07 Mar 2024 16:33:15 GMT"
								},
								{
									"key": "Via",
									"value": "1.1 vegur"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"message\": \"Deleted All Programs/Batches assigned to User ID\",\n    \"success\": true\n}"
						}
					]
				},
				{
					"name": "Delete user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4525321c-6dc1-44ae-8e52-b59ac81affa4",
								"exec": [
									"pm.test(\"Content-Type is present\", () => {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"//postman.setNextRequest(\"Get user information by id\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "57822481-c11a-4b67-b411-42490d971582",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "f926c971-6c47-4ebe-9e99-35ceb4f850e8",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [],
						"url": "{{baseurl}}/users/{{userId_0}}"
					},
					"response": []
				},
				{
					"name": "Delete existing batch",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"id": "e1295b42-7724-42d6-b1ab-1d163a743723"
							}
						}
					],
					"id": "bdb11266-8ac0-4802-a12e-333d41866db4",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [],
						"url": "{{baseurl}}/batches/{{batchId_0}}"
					},
					"response": []
				},
				{
					"name": "ByProgramId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9fc59411-2c8d-4b2e-8bf3-7dc50bb4eb25",
								"exec": [
									"if(pm.response.code === 200)",
									"{",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"}",
									"else if(pm.response.code === 404)",
									"{",
									"    pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"}",
									"else",
									"{",
									"    pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "80a3f210-97aa-425e-9367-a520e0a6a220",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [],
						"url": "{{baseurl}}{{endpoint17}}"
					},
					"response": []
				},
				{
					"name": "By ProgramName",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d6f7fb89-fd03-403b-ada8-ff74e52254f9",
								"exec": [
									"if(pm.response.code === 200)",
									"{",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"}",
									"else",
									"{",
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "87d81827-6b8c-475c-a7d0-32eb68d39068",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [],
						"url": "{{baseurl}}{{endpoint18}}"
					},
					"response": []
				}
			],
			"id": "c84731e5-68fd-427f-b585-39298b2684ae"
		},
		{
			"name": "Logout",
			"item": [
				{
					"name": "UserLogoutdatadriven",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Header validation\",()=> {\r",
									"    pm.response.to.have.header(\"Connection\");\r",
									"    pm.expect(pm.response.headers.get('Connection')).to.include('keep-alive');\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"id": "0c88f07e-d9e5-41ef-8545-8c64b5626ae3"
							}
						}
					],
					"id": "d7246eff-11d2-4c84-b1fb-b748021c753b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{baseurl}}/logoutlms"
					},
					"response": [
						{
							"id": "35d5d13e-2b39-44de-9767-66ad9a886dfb",
							"name": "UserLogout",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": "{{baseurl}}/logoutlms"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Server",
									"value": "Cowboy"
								},
								{
									"key": "Report-To",
									"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1709829214&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=ddNSfQRYkSlSyzyO98ui5mGpu0mwoERHD1EW%2FmOQ4zI%3D\"}]}"
								},
								{
									"key": "Reporting-Endpoints",
									"value": "heroku-nel=https://nel.heroku.com/reports?ts=1709829214&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=ddNSfQRYkSlSyzyO98ui5mGpu0mwoERHD1EW%2FmOQ4zI%3D"
								},
								{
									"key": "Nel",
									"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-Xss-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000 ; includeSubDomains"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "text/plain;charset=UTF-8"
								},
								{
									"key": "Content-Length",
									"value": "17"
								},
								{
									"key": "Date",
									"value": "Thu, 07 Mar 2024 16:33:33 GMT"
								},
								{
									"key": "Via",
									"value": "1.1 vegur"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "Logout successful"
						}
					]
				}
			],
			"id": "71725c0c-c402-4d27-a30e-345f885f3d11"
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": {
			"token": "{{APIToken}}"
		}
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "729ad0cc-9be7-49d8-bb01-1919ce0794a9",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "f7d92600-15cd-4d17-920a-b56dc78213a4",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}